---
# tasks file for configure
- name: Configure system NTP
  ansible.builtin.include_role:
    name: geerlingguy.ntp
  vars:
    ntp_timezone: America/Denver

- name: Clone git repository for cosmic ray detector program
  ansible.builtin.git:
    repo: 'https://github.com/dbchuck/cosmic_ray_detector'
    dest: "{{ base_path }}"
    force: yes

- name: Build cosmic ray detector program
  ansible.builtin.shell: RUSTFLAGS="-C target-cpu=native" cargo build --release --manifest-path {{ base_path }}/Cargo.toml
  args:
    executable: /bin/bash

- name: Copy SystemD service template over for cosmic ray detector program
  template:
    src: templates/cosmic-rays-detector.service.j2
    dest: /lib/systemd/system/cosmic-rays-detector.service

- name: Configure SystemD to auto start the cosmic ray detector program
  ansible.builtin.systemd:
    name: cosmic-rays-detector.service
    state: started
    enabled: true

- name: Disable bluetooth SystemD service
  ansible.builtin.systemd:
    name: bluetooth.service
    state: stopped
    enabled: false
  ignore_errors: yes

- name: Disable wifi and bluetooth modules
  community.general.kernel_blacklist:
    name: iwlwifi btusb
    state: present
  ignore_errors: yes

- name: Configure firewall
  include_tasks: firewalld.yml

- name: Change user passwords
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: present
    password: "{{ item.password | password_hash('sha512') }}"
    shell: "{{ item.shell }}"
    create_home: "{{ item.create_home }}"
  loop:
    - { name: "root", password: "{{ root_password }}", shell: /bin/bash, create_home: false}
    - { name: "{{ regular_user }}", password: "{{ user_password }}", shell: /bin/bash, create_home: true}

- name: Deploy SSH Keys
  authorized_key: 
    user: "{{ item }}"
    key: "{{ lookup('file', pub_ssh_key_path) }}"
    state: present
  loop:
    - "root"
    - "{{ regular_user }}"

- name: Disable Password Authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication'
    line: "PasswordAuthentication no"
    state: present

# - name: Configure OpenSSH daemon to only listen on a static IP address
#   lineinfile:
#     dest: /etc/ssh/sshd_config
#     regexp: '^ListenAddress'
#     line: "ListenAddress {{ static_ip }}"
#     state: present